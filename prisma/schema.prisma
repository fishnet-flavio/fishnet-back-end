generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  purchases    Purchase[]
  ratings      Rating[]
  shoppingCart ShoppingCart[]
  vendor       Vendor?
  wishList     Wishlist[]

  @@map("users")
}

model Vendor {
  id       Int       @id @default(autoincrement()) @map("user_id")
  products Product[]
  rating   Float     @default(5)
  user     User      @relation(fields: [id], references: [id])

  @@map("vendors")
}

model Product {
  id            Int            @id @default(autoincrement())
  price         Float
  name          String
  stock         Int
  description   String
  announcedAt   DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  vendorId      Int            @map("vendor_id")
  vendor        Vendor         @relation(fields: [vendorId], references: [id])
  rating        Rating[]
  sales         Purchase[]
  shoppingCarts ShoppingCart[]
  wishLists     Wishlist[]

  @@map("products")
}

model Purchase {
  id        Int      @id @default(autoincrement())
  buyerId   Int      @map("buyer_id")
  productId Int      @map("product_id")
  date      DateTime @default(now())
  buyer     User     @relation(fields: [buyerId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("purchases")
}

model Wishlist {
  id        Int     @id @default(autoincrement())
  userId    Int     @map("user_id")
  productId Int     @map("product_id")
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("wishlists")
}

model ShoppingCart {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  productId Int      @map("product_id")
  ammount   Int
  addedAt   DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id])

  @@map("shopping_carts")
}

model Rating {
  id        Int    @id @default(autoincrement())
  userId    Int    @map("user_id")
  productId Int    @map("product_id")
  ammount   Float
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User   @relation(fields: [userId], references: [id])

  @@map("ratings")
}
